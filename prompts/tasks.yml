
# Base templates that can be reused
_base_task_context: |
  # Understanding the context
  The context below is a series of short term memory objects of which the last one is the most recent input
  ## The context items
  {{ context }}

# Task generation and planning prompts
get_relevant_actions: |
  # Given the below goal and context, identify the relevant actions from the list of actions below that would be required to complete this task. Respond with comma separated action names with no spaces.
  Please make sure action names you return match exactly with the action names provided in the list below. Your task is to pick the relevant ones.
  
  # Goal
  {{ goal }}

  # Context
  {{ context }}
  
  # Available actions and their parameters
  {{ actions_str }}

generate_tasks: |
  # Goal
  {{ goal }}

  ## Your approach
  You strive to achieve a given task in as few steps as possible

  # Your Task
  Generate a list of tasks to achieve the goal. Each task should have:
  1. A description
  2. An action name (from the available actions)
  3. Parameters for the action (matching the required parameters)
  4. A list of required inputs (task descriptions that this task depends on)

  Include 'think' actions to process information or make decisions, and other actions to perform specific operations.
  'think' actions will require static prompts, so design these tasks well to accomplish the goal.
  Ensure that tasks are properly sequenced and that information flows correctly between tasks.
  Use the required_inputs key to create a parameter name and value dependency between tasks.

  The value of required_inputs should be a dictionary of parameter name (from the function) and the exact task description of a previous task.

  If you do not have enough information to plan all of the tasks at once, you can create some initial tasks and temporarily end with a replan_tasks action.
  Once information is gathered from previous tasks, a replan_tasks will prepare a fresh set of next tasks.

  {{ _base_task_context }}
  
  # Available actions and their parameters
  {{ actions_str }}

  Respond only with a JSON array of tasks and nothing else. Each task should be an object with the following structure:
  {% raw %}
  {
      "description": "Task description",
      "action": "action_name",
      "parameters": {
          "param1": "static_value_1",
          "param2": "{{value2}}"
      },
      "required_inputs": {"value2": "Exact Description of prerequisite task"}
  }
  {% endraw %}

handle_task_error: |
  Task: {{ task_description }}
  Action: {{ action }}
  Parameters: {{ parameters }}
  Error: {{ error_message }}

  The task encountered an error. Suggest a solution or alternative approach to complete the task.
  If the task needs to be broken down into smaller steps, provide those steps.
  
  Format your response as JSON with the following structure:
  {
      "solution": "Brief description of the solution",
      "new_tasks": [
          {
              "description": "Task description",
              "action": "action_name",
              "parameters": {"param_name": "param_value"},
              "required_inputs": {}
          }
      ]
  }

replan_tasks: |
  Replan tasks to achieve this goal: {{ goal }}
  
  You have partially executed some tasks to achieve this task and then requested replanning. The previous tasks and their results are available in context.

  